/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Frames;

import ConexionMysql.queries;
import Utilitaries.Producto;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paul
 */
public class InsertarSN extends javax.swing.JInternalFrame {

    /**
     * Creates new form InsertarSN
     */
    private static ArrayList<Producto> listaProductos;
    private static ArrayList<String> ListaSeriesSeleccionadas;
    private int id_producto;
    private int id_estado_producto;
    private int index_lista_insertar;
    private int cantidadSeleccionados;
    private int cantidadStock;
    private String[] SeriesSeleccionadas;
    private static ArrayList<String>  ListaSeriesTotales;
    private int Contador = 0;
    public InsertarSN() {
        initComponents();
        
    }
    public void CargarSN(){
        ListaSeriesTotales = queries.querieReturnDatosColumnArray("call SeriesPorEstado(?,?)", 1,new Object[]{id_producto, id_estado_producto});
        DefaultTableModel model1 = new DefaultTableModel(new Object[]{"SN"}, 0);
        ListaSeriesTotales.removeAll(getListaSeriesSeleccionadas());
        for(String serie : ListaSeriesTotales){
            model1.addRow(new Object[]{serie});
        }
        tableEnStock.setModel(model1);
        
        DefaultTableModel model2 = new DefaultTableModel(new Object[]{"SN"}, 0);
        for(String serie : getListaSeriesSeleccionadas()){
            model2.addRow(new Object[]{serie});
        }
        tableSeleccionadas.setModel(model2);
        jLabel1.setText("Cant Select. : " + ListaSeriesSeleccionadas.size());
        setCantidadStock(tableEnStock.getRowCount());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableEnStock = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSeleccionadas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(220, 220, 220));
        setClosable(true);

        tableEnStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SN"
            }
        ));
        tableEnStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableEnStockKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableEnStock);

        tableSeleccionadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SN"
            }
        ));
        tableSeleccionadas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableSeleccionadasKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableSeleccionadas);

        jButton1.setBackground(new java.awt.Color(33, 97, 140));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(33, 97, 140));
        jButton2.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Cant Select. : 0");

        jButton3.setText("INSERTAR SN");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("En STOCK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void TrasladoDeFila(JTable TablaOrigen, JTable TablaDestino, int fila){
        int cant = tableSeleccionadas.getRowCount();
        if(fila != -1){
            Object[] rowData = {TablaOrigen.getValueAt(fila, 0)};
            DefaultTableModel modelSeleccionadas = (DefaultTableModel) TablaDestino.getModel();
            DefaultTableModel modelStock = (DefaultTableModel) TablaOrigen.getModel();
            modelSeleccionadas.addRow(rowData);
            modelStock.removeRow(fila);
            TablaDestino.setModel(modelSeleccionadas);
            TablaOrigen.setModel(modelStock);
        }
            
    }
    
    private void tableEnStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableEnStockKeyPressed
        // TODO add your handling code here:
        int rowselect = tableEnStock.getSelectedRow();
        System.out.println("cant seleccionadas: " + tableSeleccionadas.getRowCount());
        System.out.println("cant tope: " + cantidadSeleccionados);
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT && tableSeleccionadas.getRowCount() < cantidadSeleccionados && rowselect != -1){
            TrasladoDeFila(tableEnStock, tableSeleccionadas, rowselect);
            Contador++;
            jLabel1.setText("Cant Select. : " + Contador);
        }
    }//GEN-LAST:event_tableEnStockKeyPressed

    private void tableSeleccionadasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableSeleccionadasKeyPressed
        // TODO add your handling code here:
        int rowselect = tableSeleccionadas.getSelectedRow();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT && rowselect != -1){
            TrasladoDeFila(tableSeleccionadas, tableEnStock, rowselect);
            Contador--;
            jLabel1.setText("Cant Select. : " + Contador);
        }
        
    }//GEN-LAST:event_tableSeleccionadasKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int rowselect = tableEnStock.getSelectedRow();
        if(tableSeleccionadas.getRowCount() < cantidadSeleccionados && rowselect != -1){
            TrasladoDeFila(tableEnStock, tableSeleccionadas, rowselect);
            Contador++;
            jLabel1.setText("Cant Select. : " + Contador);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rowselect = tableSeleccionadas.getSelectedRow();
        if(rowselect != -1){
            TrasladoDeFila(tableSeleccionadas, tableEnStock, rowselect);
            Contador--;
            jLabel1.setText("Cant Select. : " + Contador);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(tableSeleccionadas.getRowCount() < cantidadSeleccionados){
            JOptionPane.showMessageDialog(null, "Stock Insuficiente");
        }else{
            setListaSeriesSeleccionadas(new ArrayList<String>());
            for(int i = 0; i < tableSeleccionadas.getRowCount(); i++){
                getListaSeriesSeleccionadas().add(tableSeleccionadas.getValueAt(i, 0).toString());
            }
            getListaProductos().get(getIndex_lista_insertar()).setSeries(getListaSeriesSeleccionadas());
            frmVentas.setLista(getListaProductos());
        }
        
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableEnStock;
    private javax.swing.JTable tableSeleccionadas;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the id_producto
     */
    public int getId_producto() {
        return id_producto;
    }

    /**
     * @param id_producto the id_producto to set
     */
    public void setId_producto(int id_producto) {
        this.id_producto = id_producto;
    }

    /**
     * @return the id_estado_producto
     */
    public int getId_estado_producto() {
        return id_estado_producto;
    }

    /**
     * @param id_estado_producto the id_estado_producto to set
     */
    public void setId_estado_producto(int id_estado_producto) {
        this.id_estado_producto = id_estado_producto;
    }

    /**
     * @return the index_lista_insertar
     */
    public int getIndex_lista_insertar() {
        return index_lista_insertar;
    }

    /**
     * @param index_lista_insertar the index_lista_insertar to set
     */
    public void setIndex_lista_insertar(int index_lista_insertar) {
        this.index_lista_insertar = index_lista_insertar;
    }

    /**
     * @return the cantidadSeleccionados
     */
    public int getCantidadSeleccionados() {
        return cantidadSeleccionados;
    }

    /**
     * @param cantidadSeleccionados the cantidadSeleccionados to set
     */
    public void setCantidadSeleccionados(int cantidadSeleccionados) {
        this.cantidadSeleccionados = cantidadSeleccionados;
    }

    /**
     * @return the lista
     */
    public ArrayList<Producto> getLista() {
        return getListaProductos();
    }

    /**
     * @param aLista the lista to set
     */
    public void setLista(ArrayList<Producto> aLista) {
        setListaProductos(aLista);
    }

    /**
     * @return the SeriesSeleccionadas
     */
    public String[] getSeriesSeleccionadas() {
        return SeriesSeleccionadas;
    }

    /**
     * @param SeriesSeleccionadas the SeriesSeleccionadas to set
     */
    public void setSeriesSeleccionadas(String[] SeriesSeleccionadas) {
        this.SeriesSeleccionadas = SeriesSeleccionadas;
    }

    /**
     * @return the SeriesTotales
     */
    public ArrayList<String> getSeriesTotales() {
        return ListaSeriesTotales;
    }

    /**
     * @param SeriesTotales the SeriesTotales to set
     */
    public void setSeriesTotales(ArrayList<String> SeriesTotales) {
        this.ListaSeriesTotales = SeriesTotales;
    }

    /**
     * @return the ListaSeriesSeleccionadas
     */
    public ArrayList<String> getListaSeriesSeleccionadas() {
        return ListaSeriesSeleccionadas;
    }

    /**
     * @param aListaSeriesSeleccionadas the ListaSeriesSeleccionadas to set
     */
    public void setListaSeriesSeleccionadas(ArrayList<String> aListaSeriesSeleccionadas) {
        ListaSeriesSeleccionadas = aListaSeriesSeleccionadas;
    }

    /**
     * @return the listaProductos
     */
    public static ArrayList<Producto> getListaProductos() {
        return listaProductos;
    }

    /**
     * @param aListaProductos the listaProductos to set
     */
    public static void setListaProductos(ArrayList<Producto> aListaProductos) {
        listaProductos = aListaProductos;
    }

    /**
     * @return the cantidadStock
     */
    public int getCantidadStock() {
        return cantidadStock;
    }

    /**
     * @param cantidadStock the cantidadStock to set
     */
    public void setCantidadStock(int cantidadStock) {
        this.cantidadStock = cantidadStock;
    }
}
