/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Frames;

import ConexionMysql.queries;
import Utilitaries.MetodoCategorias;
import Utilitaries.MetodoMarcas;
import Utilitaries.MetodoProducto;
import Utilitaries.RenderImagen;
import Utilitaries.Imprimir;
import Utilitaries.impresionExcel;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paul
 */
public class frmLista extends javax.swing.JInternalFrame {
    private static byte[] imagen;
    /**
     * Creates new form frmLista
     */
    public frmLista(){
        initComponents();
        Cargar();
        CargarCmb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        lblImagen = new javax.swing.JLabel();
        btnpdf = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        cmbMarca = new javax.swing.JComboBox<>();
        cmbSubCategoria = new javax.swing.JComboBox<>();
        btnpdf1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setClosable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton1.setText("INSERTAR PORTADA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnpdf.setText("PDF");
        btnpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpdfActionPerformed(evt);
            }
        });

        jButton3.setText("FILTRAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(220, 220, 220));
        jCheckBox2.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox2.setText("Filtro");

        cmbMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbSubCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnpdf1.setText("EXCEL");
        btnpdf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpdf1ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(220, 220, 220));
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("En Stock");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblImagen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnpdf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnpdf1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnpdf)
                        .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox2)
                        .addComponent(jButton3)
                        .addComponent(btnpdf1)
                        .addComponent(jCheckBox1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(lblImagen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void CargarCmb(){
        String[] Marcas = MetodoMarcas.BuscarMarcasString("");
        String[] SubCategoria = MetodoCategorias.TodasSubCategorias("");
        cmbMarca.removeAllItems();
        cmbSubCategoria.removeAllItems();
        cmbMarca.addItem("NINGUNO");
        cmbSubCategoria.addItem("NINGUNO");
        for(String item : Marcas){
            cmbMarca.addItem(item);
        }
        for(String item : SubCategoria){
            cmbSubCategoria.addItem(item);
        }
    }
    private static void mostrarImagen() {
        try {
            int anchoDeseado = 200;
            // Cargar la imagen desde los datos binarios
            BufferedImage bufferedImage = ImageIO.read(new ByteArrayInputStream(imagen));

            // Calcular la proporci√≥n para redimensionar la imagen
            double proporcion = (double) anchoDeseado / bufferedImage.getWidth();
            int altoDeseado = (int) (bufferedImage.getHeight() * proporcion);

            // Escalar la imagen
            Image imagenEscalada = bufferedImage.getScaledInstance(anchoDeseado, altoDeseado, Image.SCALE_SMOOTH);

            // Establecer la imagen en el JLabel
            lblImagen.setIcon(new ImageIcon(imagenEscalada));
            
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al mostrar la imagen.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private byte[] leerDatosImagen(File archivoImagen) {
        try (FileInputStream fis = new FileInputStream(archivoImagen)) {
            byte[] buffer = new byte[(int) archivoImagen.length()];
            fis.read(buffer);
            return buffer;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivoImagen = fileChooser.getSelectedFile();
            imagen = leerDatosImagen(archivoImagen);
            if (imagen != null) {
                mostrarImagen();
                JOptionPane.showMessageDialog(null, "Imagen insertada correctamente.");
            } else {
                JOptionPane.showMessageDialog(null, "Error al leer la imagen.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpdfActionPerformed
        // TODO add your handling code here:
        if(imagen != null){
            Imprimir nuevo = new Imprimir();
            nuevo.setPortada(imagen);
            int indexMarca = cmbMarca.getSelectedIndex();
            int indexSubcategoria = cmbSubCategoria.getSelectedIndex();
            if(jCheckBox1.isSelected()){
                nuevo.GenerarPdf2("call listaenstock(?,?)",new Object[]{indexMarca,indexSubcategoria});
            }else{
                nuevo.GenerarPdf2("call lista(?,?)", new Object[]{indexMarca,indexSubcategoria});
            }
        }else{
            JOptionPane.showMessageDialog(null, "INSERTA UNA PORTADA");
        }
        
    }//GEN-LAST:event_btnpdfActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox2.isSelected()){
            //aumetamos 1 ya que el cmbBox devuelve a partir de 0 y en la base de datos empieza en 1
            int indexMarca = cmbMarca.getSelectedIndex();
            int indexSubcategoria = cmbSubCategoria.getSelectedIndex();
            if(jCheckBox1.isSelected()){
                jTable1.setModel(queries.QueryReturnTableLista("call listaenstock(?,?)",7, new Object[]{indexMarca,indexSubcategoria}));
            }else{
                jTable1.setModel(queries.QueryReturnTableLista("call lista(?,?)",7, new Object[]{indexMarca,indexSubcategoria}));
            }
            jTable1.setRowHeight(50);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(400);
        }else{
            Cargar();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnpdf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpdf1ActionPerformed
        try {
            // TODO add your handling code here:
            impresionExcel.exportarExcelImagen((DefaultTableModel) jTable1.getModel());
        } catch (IOException ex) {
            Logger.getLogger(frmLista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnpdf1ActionPerformed
    private void Cargar(){
        jTable1.setDefaultRenderer(Object.class, new RenderImagen());
        jTable1.setModel(queries.QueryReturnTableLista("select * from view_lista ",7));
        jTable1.setRowHeight(50);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(400);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnpdf;
    private javax.swing.JButton btnpdf1;
    private javax.swing.JComboBox<String> cmbMarca;
    private javax.swing.JComboBox<String> cmbSubCategoria;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private static javax.swing.JLabel lblImagen;
    // End of variables declaration//GEN-END:variables
}
